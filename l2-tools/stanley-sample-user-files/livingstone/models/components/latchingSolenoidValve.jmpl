// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class latchingSolenoidValve {

// --- inputs --- 
openCloseLatchCommand valveCmdIn;
pipe pipeIn;
// --- outputs --- 
pipe pipeOut;
// --- attributes --- 
// --- mode names --- 
private enum ModeType {unknownFault, open, closed, stuckOpen, stuckClosed};
private ModeType mode;
stateVector [mode];

// --- constructor --- 
/// A valve that stays in the previous state until explicitly commanded.
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case unknownFault: 
;

case open: 
pipeIn.equal(pipeOut);

case closed: 
pipeIn.flow.sign = zero;
pipeOut.flow.sign = zero;

/// Stuck-open and stuck-closed are equally likely.
case stuckOpen: 
pipeIn.equal(pipeOut);

/// Stuck-open and stuck-closed are equally likely.
case stuckClosed: 
pipeIn.flow.sign = zero;
pipeIn.flow.sign = zero;

}

}

// --- transitions --- 
transition closeValve(open, closed) {
valveCmdIn = close;
}
transition openValve(closed, open) {
valveCmdIn = open;
}


// --- probabilities --- 
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}
// probability `likely' => 0.05
failure toStuckOpen(*, stuckOpen, 0.05) {
}
// probability `likely' => 0.05
failure toStuckClosed(*, stuckClosed, 0.05) {
}

}

