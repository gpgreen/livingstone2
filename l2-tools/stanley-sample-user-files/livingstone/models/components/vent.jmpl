// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class vent {

// --- inputs --- 
pipe pipeIn;
// --- outputs --- 
pipe pipeOut;
// --- attributes --- 
// --- mode names --- 
private enum ModeType {faulty, nominal, unknownFault};
private ModeType mode;
stateVector [mode];

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case faulty: 
! flowIn.equal(flowOut);

/// the thruster behaves like a nozzle. It has no valve behavioural properties.
///  (flow-values-equal (flow-in ?name) (flow-out ?name))
/// :transitions ((quiet
///                   :when (zero (flow-in ?name))
///                   :next quiescent) 
///               (:otherwise :persist))
case nominal: 
pipeIn.equal(pipeOut);

case unknownFault: 
;

}

}

// --- transitions --- 


// --- probabilities --- 
// probability `rare' => 1.0e-4
failure toFaulty(*, faulty, 1.0e-4) {
}
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}

}

