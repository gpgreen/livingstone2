// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class testPort {

// --- inputs --- 
pipe pipeIn;
openCloseCommand testPortCmdIn;
// --- outputs --- 
pipe pipeOut;
// --- attributes --- 
// --- mode names --- 
private enum ModeType {open, closed, stuckOpen, unknownFault};
private ModeType mode;
stateVector [mode];

// --- parameters --- 
contextValue context;

relation testPort_setParams (contextValue paramVal1_1) {
context = paramVal1_1;
}

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case open: 
pipeIn.equal(pipeOut);

case closed: 
pipeIn.flow.sign = zero;
pipeOut.flow.sign = zero;

/// Inadvertently open, whether due to mechanical failure or operator error.
case stuckOpen: 
pipeIn.equal(pipeOut);

case unknownFault: 
;

}

}

// --- transitions --- 
transition closeTestPort(open, closed) {
testPortCmdIn = close;
}
transition openTestPort(closed, open) {
testPortCmdIn = open;
}


// --- probabilities --- 
// probability `rare' => 1.0e-4
failure toStuckOpen(*, stuckOpen, 1.0e-4) {
}
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}

}

