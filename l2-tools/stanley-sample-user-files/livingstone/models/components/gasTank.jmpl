// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class gasTank {

// --- inputs --- 
pipe pipeIn;
// --- outputs --- 
temperatureValues internalTemperature;
pipe pipeOut;
// --- attributes --- 
pressureValues internalPressure;
// --- mode names --- 
private enum ModeType {unknownFault, empty, full, filling, emptying};
private ModeType mode;
stateVector [mode];

// --- constructor --- 
/// A generic tank or accumulator for holding gaseous expendables.
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case unknownFault: 
;

case empty: 
internalPressure.sign = zero;
pipeOut.flow.sign = zero;
pipeIn.flow.sign = zero;

case full: 
internalPressure.sign = positive;
internalTemperature.sign = positive;
(((internalPressure.rel = nominal) &
  (internalTemperature.rel = nominal)) |
 ((internalPressure.rel = high) &
  (internalTemperature.rel = high)));

/// The tank is filling when the inlet pressure is greater than the internal 
/// pressure, and there is a positive flow into the tank and no outflow.
case filling: 
pipeIn.pressure.sign = positive;
pipeIn.pressure.moreThan(internalPressure);
pipeIn.flow.sign = positive;
pipeOut.flow.sign = zero;
pipeIn = pipeOut;
((internalPressure.sign = zero) |
 ((internalPressure.sign = positive) &
  (internalPressure.rel = low)));

/// The tank is emptying when there is no flow at the inlet, and positive flow at 
/// the outlet.
case emptying: 
internalPressure.sign = positive;
((internalPressure.rel = nominal) |
 (internalPressure.rel = low));
pipeIn.flow.sign = zero;
pipeOut.flow.sign = positive;
pipeIn = pipeOut;
internalPressure = pipeOut.pressure;

}

}

// --- transitions --- 
transition startFilling(empty, filling) {
((internalPressure.sign = zero) |
  ((internalPressure.sign = positive) &
   (internalPressure.rel = low)));
pipeIn.pressure.rel = nominal;
pipeIn.pressure.sign = positive;
pipeIn.flow.sign = positive;
}
transition startEmptying(full, emptying) {
internalPressure.sign = positive;
internalPressure.rel = nominal;
pipeOut.flow.sign = positive;
}
transition fillingUp(filling, full) {
pipeIn.pressure.sign = positive;
pipeIn.pressure.rel = nominal;
pipeIn.flow.sign = positive;
internalPressure.sign = positive;
internalPressure.rel = nominal;
}
transition emptiedOut(emptying, empty) {
internalPressure.sign = zero;
pipeOut.flow.sign = positive;
}


// --- probabilities --- 
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}

}

