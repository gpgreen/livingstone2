// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class manualValve {

// --- inputs --- 
openCloseCommand valveCmdIn;
pipe pipeIn;
// --- outputs --- 
pipe pipeOut;
// --- attributes --- 
// --- mode names --- 
private enum ModeType {unknownFault, open, closed, leaky};
private ModeType mode;
stateVector [mode];

// --- parameters --- 
contextValue context;

relation manualValve_setParams (contextValue paramVal1_1) {
context = paramVal1_1;
}

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case unknownFault: 
;

/// eg. Fill and Drain valves for charging on-board tanks with pressurized
/// gas or liquid (up to
/// 8,000 PSIG), then maintaining the pressure levels in a leak-tight condition.
case open: 
pipeIn.equal(pipeOut);

case closed: 
pipeIn.flow.sign = zero;
pipeOut.flow.sign = zero;

case leaky: 
mode = closed;
pipeOut.flow.moreThanZero();

}

}

// --- transitions --- 
transition closeValve(open, closed) {
valveCmdIn = close;
}
transition openValve(closed, open) {
valveCmdIn = open;
}


// --- probabilities --- 
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}
// probability `lessLikely' => 0.005
failure toLeaky(*, leaky, 0.005) {
}

}

