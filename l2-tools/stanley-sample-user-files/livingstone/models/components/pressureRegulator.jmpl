// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class pressureRegulator {

// --- inputs --- 
pipe pipeIn;
// --- outputs --- 
mpre107pSetPoints pneumaticLineOut;
// --- attributes --- 
// --- mode names --- 
private enum ModeType {ok, unknownFault, regulatingHigh, regulatingLow};
private ModeType mode;
stateVector [mode];

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

/// (pressure-values-equal (pressure-out ?name) (setpoint-pressure ?name)) 
/// 
/// eg
/// High
/// pressure systems up to
/// 6000 PSIG with outlet
/// pressure in the 300 PSIG
/// range, as well as lower
/// pressure systems in the
/// 300 PSIG inlet  30 PSIG
/// outlet range have been
/// developed.
case ok: 
pipeOut.pressure.rel = nominal;
pipeIn.flow.equal(pipeOut.flow);

case unknownFault: 
;

/// (pressure-values-more-than (pressure-out ?name) (setpoint-pressure ?name))
case regulatingHigh: 
pipeOut.pressure.rel = high;

/// (pressure-values-less-than (pressure-out ?name) (setpoint-pressure ?name))
case regulatingLow: 
pipeOut.pressure.rel = low;

}

}

// --- transitions --- 


// --- probabilities --- 
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}
// probability `lessLikely' => 0.005
failure toRegulatingHigh(*, regulatingHigh, 0.005) {
}
// probability `lessLikely' => 0.005
failure toRegulatingLow(*, regulatingLow, 0.005) {
}

}

