// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class checkValve {

// --- inputs --- 
pipe pipeIn;
// --- outputs --- 
pipe pipeOut;
// --- attributes --- 
openClosedValues cvMode;
// --- mode names --- 
private enum ModeType {unknownFault, nominal};
private ModeType mode;
stateVector [mode];

// --- parameters --- 
contextValue context;
pressureValues crackPressure;

relation checkValve_setParams (contextValue paramVal1_1, signValues paramVal2_1, relativeValues paramVal2_2) {
context = paramVal1_1;
crackPressure.sign = paramVal2_1;
crackPressure.rel = paramVal2_2;
}

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case unknownFault: 
;

/// The check valve is open when flow is in the forward direction, and closed
/// otherwise. 
/// 
/// Note: the pressure difference between pipe-in and pipe-out must exceed the crack-pressure for the check-valve to open.
case nominal: 
if ((! pipeIn.pressure.moreThan(crackPressure)) |
    (pipeIn.flow.sign = zero) | (pipeIn.flow.sign = negative))
  cvMode = closed;
else
  cvMode = open;
if (cvMode = closed) {
  pipeIn.flow.sign = zero;
  pipeOut.flow.sign = zero;
}
if (cvMode = open)
  pipeIn = pipeOut;

}

}

// --- transitions --- 


// --- probabilities --- 
// probability `unknownFaultRank' => 1.0e-10
failure toUnknownFault(*, unknownFault, 1.0e-10) {
}

}


