// this code is automatically generated by Stanley VJMPL
// DO NOT EDIT

class missionPhase {

// --- inputs --- 
missionPhaseCommand missionPhaseCmd;
// --- outputs --- 
// --- attributes --- 
// --- mode names --- 
private enum ModeType {expendableGasServicing, rp1Loading, loxLoading, captiveCarry, mainstage, dump, landing, faulty, postFlight, x34InHangar};
private ModeType mode;
stateVector [mode];

// --- parameters --- 
contextValue context;

relation missionPhase_setParams (contextValue paramVal1_1) {
context = paramVal1_1;
}

// --- constructor --- 
{
// --- background model --- 
// --- attribute facts --- 


// --- mode models --- 
switch (mode) {

case expendableGasServicing: 
;

case rp1Loading: 
;

case loxLoading: 
;

/// nominal(LoxTank).pressure = psia13to20;
/// 
/// if (?context = pneumatics) {
///   nominalPressure = x;
///   nominalFlow = x;
///   nominalTemperature = x;
/// };
/// if (?context = pressurization) {
///   nominalPressure = x;
///   nominalFlow = zero;
///   nominalTemperature = x;
/// };
/// if (?context = loxTank) {
///   nominalPressure = psia13to20;
///   nominalFlow = zero;
///   nominalTemperature = x;
/// };
/// if (?context = loxVent) {
///   nominalPressure = x;
///   nominalFlow = x;
///   nominalTemperature = x;
/// };
/// if (?context = loxFeed) {
///   nominalPressure = psia11to20;
///   nominalFlow = zero;
///   nominalTemperature = x;
/// };
/// if (?context = loxDump) {
///   nominalPressure = psiaZero;
///   nominalFlow = zero;
///   nominalTemperature = x;
/// };
/// if (?context = loxEngineInlet) {
///   nominalPressure = x;
///   nominalFlow = zero;
///   nominalTemperature = x;
/// };
case captiveCarry: 
;

case mainstage: 
;

case dump: 
;

case landing: 
;

case faulty: 
;

case postFlight: 
;

case x34InHangar: 
;

}

}

// --- transitions --- 
transition startRp1Load(expendableGasServicing, rp1Loading) {
missionPhase = loadRp1;
}
transition startLoxLoad(rp1Loading, loxLoading) {
missionPhaseCmd = loadLox;
}
transition startCaptiveCarry(loxLoading, captiveCarry) {
missionPhaseCmd = captiveCarry;
}
transition engineStartSequence(captiveCarry, mainstage) {
missionPhaseCmd = mainstage;
}
transition startPropellantDump(mainstage, dump) {
missionPhaseCmd = dump;
}
transition startLanding(dump, landing) {
missionPhaseCmd = land;
}
transition startPostFlight(landing, postFlight) {
missionPhaseCmd = postFlight;
}
transition startExpendableGasServicing(x34InHangar, expendableGasServicing) {
missionPhaseCmd = expendableGasServicing;
}


// --- probabilities --- 
failure faulty(*, faulty, rare) {
}

}

